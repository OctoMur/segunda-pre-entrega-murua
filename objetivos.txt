1) Los campos thumbnails y status no deberían ser obligatorios en los productos. Además, el campo status debería autogenerarse con el valor true. ✓
2) Cuando actúan las validaciones de código repetido y campos obligatorios, estos mensajes deben verse en POSTMAN. No es adecuado que aparezca el mensaje de "Producto creado" cuando eso no ocurre al actuar estas validaciones.✓
3) En tu router de productos te está faltando agregarle async/await a las solicitudes POST, PUT y DELETE. Cuidado con mezclar sincronismo con asincronismo porque te puede traer errores al programa.
4) En tu router.put "/products/:pid" te está faltando validar el caso en el que el usuario envie un :pid inexistente en tu base de datos. Si yo intento actualizar un producto que no existe en tu base de datos no es adecuado que POSTMAN me devuelva "Producto actualizado" cuando en realidad no se está actualizando nada. Podes implementar lo siguiente:



 const updatedData = await productManager.updateProduct(pid, productUpdated);



    if(!updatedData) {

        res.status(404).send({message: "El producto que desea actualizar no existe"})

    } else {

        res.send({status:"sucess", message: "producto actualizado"})

    }

Agregas ese condicional al router en el que básicamente validará si un producto está recibiendo o no los nuevos datos. Si se pasa un ID inexistente en la base de datos, los datos no se guardarán en ningún lado y te devolverá el mensaje "El producto que desea actualizar no existe". En cambio, si el ID es válido, se actualizará el producto sin problemas.✓
5) Lo mismo que en la observación 4 debes aplicarlo en el router.delete "/products/:pid".✓
6) Permitis agregar productos inexistentes al carrito. Debes crear una validación que verifique que el ID del producto que se pasa por el endpoint coincida con algún ID de producto registrado en la base de datos. Si no hay coincidencia, debes detener la ejecución de la función indicando mediante un mensaje que el producto que se desea agregar no existe.✓
7) Si intento agregar un producto a un carrito que no existe no es apropiado que POSTMAN devuelva como mensaje "error del servidor". No es un caso de "error del servidor" porque no es nuestro código el que está fallando, lo que está ocurriendo es una bad request por parte del cliente (de statuso 404 Not Found) al estar enviado un :cid inválido. Por ende, el mensaje que debe visualizarse es "El ID de carrito ingresado no es válido".
8) El mensaje de "El carrito no existe" de tu solicitud GET "/carts/:cid" debería tener status code 404 (Not Found) y se está enviando con status code 200 8ok), que no es lo adecuado a la situación. Modifícalo.
9) Sería ideal que tu router principal en app.js este desarrollado así:



app.use("/api/products", productsRouter);

app.use("/api/carts", cartRouter);